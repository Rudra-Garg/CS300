name: CS300
services:
  cloud:
    build: ./cloud
    networks:
      - cloud_proxy_net
    cap_add:
      - NET_ADMIN
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - ./logs/cloud:/var/log/nginx

  proxy:
    build: ./proxy
    networks:
      - cloud_proxy_net
      - proxy_gateways_net
    cap_add:
      - NET_ADMIN
    ports:
      - "9090:9090"
    depends_on:
      gateway1:
        condition: service_healthy
      gateway2:
        condition: service_healthy
    environment:
      - ENABLE_LATENCY=${ENABLE_LATENCY:-false}
      - LATENCY_PROXY_TO_CLOUD=${LATENCY_PROXY_TO_CLOUD:-0ms}
      # Pass jitter/loss if using them in entrypoint.sh
      - JITTER_PROXY_TO_CLOUD=${JITTER_PROXY_TO_CLOUD:-}
      - LOSS_PROXY_TO_CLOUD=${LOSS_PROXY_TO_CLOUD:-}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - ./logs/proxy:/var/log/nginx
      - ./config:/app/config

  gateway1:
    build: ./gateway
    networks:
      - proxy_gateways_net
      - gateway1_mobiles_net
    cap_add:
      - NET_ADMIN
    ports:
      - "9091:8000"  # Changed from 9090 to 8000

    environment:
      # Pass values directly from .env/host environment
      - ENABLE_LATENCY=${ENABLE_LATENCY:-false}
      - LATENCY_GATEWAY_TO_PROXY=${LATENCY_GATEWAY_TO_PROXY:-0ms}
      # Pass jitter/loss if using them in entrypoint.sh
      - JITTER_GATEWAY_TO_PROXY=${JITTER_GATEWAY_TO_PROXY:-}
      - LOSS_GATEWAY_TO_PROXY=${LOSS_GATEWAY_TO_PROXY:-}
      # Pass other necessary env vars if any (like PYTHONUNBUFFERED)
      - PYTHONUNBUFFERED=1


    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - ./logs/edge1:/app/logs
      - ./config:/app/config

  gateway2:
    build: ./gateway
    networks:
      - proxy_gateways_net
      - gateway2_mobiles_net
    cap_add:
      - NET_ADMIN
    ports:
      - "9092:8000"  # Changed from 9090 to 8000
    environment:
      # Pass values directly from .env/host environment
      - ENABLE_LATENCY=${ENABLE_LATENCY:-false}
      - LATENCY_GATEWAY_TO_PROXY=${LATENCY_GATEWAY_TO_PROXY:-0ms}
      # Pass jitter/loss if using them in entrypoint.sh
      - JITTER_GATEWAY_TO_PROXY=${JITTER_GATEWAY_TO_PROXY:-}
      - LOSS_GATEWAY_TO_PROXY=${LOSS_GATEWAY_TO_PROXY:-}
      # Pass other necessary env vars if any (like PYTHONUNBUFFERED)
      - PYTHONUNBUFFERED=1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - ./logs/edge2:/app/logs
      - ./config:/app/config

  mobile1_1:
    build: ./mobile
    networks:
      - gateway1_mobiles_net
    # MERGE environment variables
    environment:
      - GATEWAY=gateway1 # Keep existing ones
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      # Add the latency variables
      - ENABLE_LATENCY=${ENABLE_LATENCY:-false}
      - LATENCY_MOBILE_TO_GATEWAY=${LATENCY_MOBILE_TO_GATEWAY:-0ms}
      # Pass jitter/loss if using them in entrypoint.sh
      - JITTER_MOBILE_TO_GATEWAY=${JITTER_MOBILE_TO_GATEWAY:-}
      - LOSS_MOBILE_TO_GATEWAY=${LOSS_MOBILE_TO_GATEWAY:-}
    cap_add:
      - NET_ADMIN
    ports:
      - "9093:9090"
    depends_on:
      gateway1:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - ./logs/mobile1_1:/app/logs
      - ./config:/app/config

  mobile1_2:
    build: ./mobile
    networks:
      - gateway1_mobiles_net
    # MERGE environment variables
    environment:
      - GATEWAY=gateway1 # Keep existing ones
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      # Add the latency variables
      - ENABLE_LATENCY=${ENABLE_LATENCY:-false}
      - LATENCY_MOBILE_TO_GATEWAY=${LATENCY_MOBILE_TO_GATEWAY:-0ms}
      # Pass jitter/loss if using them in entrypoint.sh
      - JITTER_MOBILE_TO_GATEWAY=${JITTER_MOBILE_TO_GATEWAY:-}
      - LOSS_MOBILE_TO_GATEWAY=${LOSS_MOBILE_TO_GATEWAY:-}
    cap_add:
      - NET_ADMIN
    ports:
      - "9094:9090" 
    depends_on:
      gateway1:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mobile1_3:
    build: ./mobile
    networks:
      - gateway1_mobiles_net
    # MERGE environment variables
    environment:
      - GATEWAY=gateway1 # Keep existing ones
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      # Add the latency variables
      - ENABLE_LATENCY=${ENABLE_LATENCY:-false}
      - LATENCY_MOBILE_TO_GATEWAY=${LATENCY_MOBILE_TO_GATEWAY:-0ms}
      # Pass jitter/loss if using them in entrypoint.sh
      - JITTER_MOBILE_TO_GATEWAY=${JITTER_MOBILE_TO_GATEWAY:-}
      - LOSS_MOBILE_TO_GATEWAY=${LOSS_MOBILE_TO_GATEWAY:-}
    cap_add:
      - NET_ADMIN
    ports:
      - "9096:9090" 
    depends_on:
      gateway1:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mobile1_4:
    build: ./mobile
    networks:
      - gateway1_mobiles_net
    # MERGE environment variables
    environment:
      - GATEWAY=gateway1 # Keep existing ones
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      # Add the latency variables
      - ENABLE_LATENCY=${ENABLE_LATENCY:-false}
      - LATENCY_MOBILE_TO_GATEWAY=${LATENCY_MOBILE_TO_GATEWAY:-0ms}
      # Pass jitter/loss if using them in entrypoint.sh
      - JITTER_MOBILE_TO_GATEWAY=${JITTER_MOBILE_TO_GATEWAY:-}
      - LOSS_MOBILE_TO_GATEWAY=${LOSS_MOBILE_TO_GATEWAY:-}
    cap_add:
      - NET_ADMIN
    ports:
      - "9097:9090" 
    depends_on:
      gateway1:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mobile2_1:
    build: ./mobile
    networks:
      - gateway2_mobiles_net
    # MERGE environment variables
    environment:
      - GATEWAY=gateway1 # Keep existing ones
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      # Add the latency variables
      - ENABLE_LATENCY=${ENABLE_LATENCY:-false}
      - LATENCY_MOBILE_TO_GATEWAY=${LATENCY_MOBILE_TO_GATEWAY:-0ms}
      # Pass jitter/loss if using them in entrypoint.sh
      - JITTER_MOBILE_TO_GATEWAY=${JITTER_MOBILE_TO_GATEWAY:-}
      - LOSS_MOBILE_TO_GATEWAY=${LOSS_MOBILE_TO_GATEWAY:-}
    cap_add:
      - NET_ADMIN
    ports:
      - "9098:9090" 
    depends_on:
      gateway2:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mobile2_2:
    build: ./mobile
    networks:
      - gateway2_mobiles_net
    # MERGE environment variables
    environment:
      - GATEWAY=gateway1 # Keep existing ones
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      # Add the latency variables
      - ENABLE_LATENCY=${ENABLE_LATENCY:-false}
      - LATENCY_MOBILE_TO_GATEWAY=${LATENCY_MOBILE_TO_GATEWAY:-0ms}
      # Pass jitter/loss if using them in entrypoint.sh
      - JITTER_MOBILE_TO_GATEWAY=${JITTER_MOBILE_TO_GATEWAY:-}
      - LOSS_MOBILE_TO_GATEWAY=${LOSS_MOBILE_TO_GATEWAY:-}
    cap_add:
      - NET_ADMIN
    ports:
      - "9099:9090" 
    depends_on:
      gateway2:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mobile2_3:
    build: ./mobile
    networks:
      - gateway2_mobiles_net
    # MERGE environment variables
    environment:
      - GATEWAY=gateway1 # Keep existing ones
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      # Add the latency variables
      - ENABLE_LATENCY=${ENABLE_LATENCY:-false}
      - LATENCY_MOBILE_TO_GATEWAY=${LATENCY_MOBILE_TO_GATEWAY:-0ms}
      # Pass jitter/loss if using them in entrypoint.sh
      - JITTER_MOBILE_TO_GATEWAY=${JITTER_MOBILE_TO_GATEWAY:-}
      - LOSS_MOBILE_TO_GATEWAY=${LOSS_MOBILE_TO_GATEWAY:-}
    cap_add:
      - NET_ADMIN
    ports:
      - "9100:9090" 
    depends_on:
      gateway2:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mobile2_4:
    build: ./mobile
    networks:
      - gateway2_mobiles_net
    # MERGE environment variables
    environment:
      - GATEWAY=gateway1 # Keep existing ones
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      # Add the latency variables
      - ENABLE_LATENCY=${ENABLE_LATENCY:-false}
      - LATENCY_MOBILE_TO_GATEWAY=${LATENCY_MOBILE_TO_GATEWAY:-0ms}
      # Pass jitter/loss if using them in entrypoint.sh
      - JITTER_MOBILE_TO_GATEWAY=${JITTER_MOBILE_TO_GATEWAY:-}
      - LOSS_MOBILE_TO_GATEWAY=${LOSS_MOBILE_TO_GATEWAY:-}
    cap_add:
      - NET_ADMIN
    ports:
      - "9101:9090" 
    depends_on:
      gateway2:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'  # Add this line
    ports:
      - "9095:9090"
    networks:
      - monitoring_net
      - cloud_proxy_net
      - proxy_gateways_net
      - gateway1_mobiles_net
      - gateway2_mobiles_net

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./config/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./config/grafana-provisioning:/etc/grafana/provisioning:ro  # Add this line
      - ./config/grafana-dashboards:/var/lib/grafana/dashboards:ro
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring_net
      - cloud_proxy_net
      - proxy_gateways_net
      - gateway1_mobiles_net
      - gateway2_mobiles_net
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  cloud_proxy_net:
  proxy_gateways_net:
  gateway1_mobiles_net:
  gateway2_mobiles_net:
  monitoring_net:

volumes:
  prometheus_data:
  grafana_data: